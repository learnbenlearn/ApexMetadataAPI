public class SessionSettings {
    public Boolean allowUserAuthenticationByCertificate;
    public Boolean canConfirmEmailChangeInLightningCommunities;
    public Boolean canConfirmIdentityBySmsOnly;
    public Boolean disableTimeoutWarning;
    public Boolean enableBuiltInAuthenticator;
    public Boolean enableCSPOnEmail;
    public Boolean enableCSRFOnGet;
    public Boolean enableCSRFOnPost;
    public Boolean enableCacheAndAutocomplete;
    public Boolean enableClickjackNonsetupSFDC;
    public Boolean enableClickjackNonsetupUser;
    public Boolean enableClickjackNonsetupUserHeaderless;
    public Boolean enableClickjackSetup;
    public Boolean enableContentSniffingProtection;
    public Boolean enableLightningLogin;
    public Boolean enableLightningLoginOnlyWithUserPerm;
    public Boolean enableOauthCorsPolicy;
    public Boolean enablePostForSessions;
    public Boolean enableSMSIdentity;
    public Boolean enableU2F;
    public Boolean enableUpgradeInsecureRequests;
    public Boolean enableXssProtection;
    public Boolean enforceIpRangesEveryRequest;
    public Boolean enforceUserDeviceRevoked;
    public Boolean forceLogoutOnSessionTimeout;
    public Boolean forceRelogin;
    public Boolean hasRetainedLoginHints;
    public Boolean hasUserSwitching;
    public Boolean hstsOnForcecomSites;
    public Boolean identityConfirmationOnEmailChange;
    public Boolean identityConfirmationOnTwoFactorRegistrationEnabled;
    public Boolean lockSessionsToDomain;
    public Boolean lockSessionsToIp;
    public String lockerServiceAPIVersion;
    public Boolean lockerServiceCSP;
    public Boolean lockerServiceNext;
    public Boolean lockerServiceNextControl;
    public String logoutURL;
    public Boolean redirectionWarning;
    public Boolean referrerPolicy;
    public Boolean requireHttpOnly;
    public Boolean requireHttps;
    public String sessionTimeout;
    public Boolean useLocalStorageForLogoutUrl;
    private String[] allowUserAuthenticationByCertificate_type_info = new String[]{'allowUserAuthenticationByCertificate','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] canConfirmEmailChangeInLightningCommunities_type_info = new String[]{'canConfirmEmailChangeInLightningCommunities','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] canConfirmIdentityBySmsOnly_type_info = new String[]{'canConfirmIdentityBySmsOnly','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] disableTimeoutWarning_type_info = new String[]{'disableTimeoutWarning','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableBuiltInAuthenticator_type_info = new String[]{'enableBuiltInAuthenticator','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableCSPOnEmail_type_info = new String[]{'enableCSPOnEmail','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableCSRFOnGet_type_info = new String[]{'enableCSRFOnGet','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableCSRFOnPost_type_info = new String[]{'enableCSRFOnPost','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableCacheAndAutocomplete_type_info = new String[]{'enableCacheAndAutocomplete','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableClickjackNonsetupSFDC_type_info = new String[]{'enableClickjackNonsetupSFDC','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableClickjackNonsetupUser_type_info = new String[]{'enableClickjackNonsetupUser','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableClickjackNonsetupUserHeaderless_type_info = new String[]{'enableClickjackNonsetupUserHeaderless','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableClickjackSetup_type_info = new String[]{'enableClickjackSetup','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableContentSniffingProtection_type_info = new String[]{'enableContentSniffingProtection','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableLightningLogin_type_info = new String[]{'enableLightningLogin','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableLightningLoginOnlyWithUserPerm_type_info = new String[]{'enableLightningLoginOnlyWithUserPerm','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableOauthCorsPolicy_type_info = new String[]{'enableOauthCorsPolicy','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enablePostForSessions_type_info = new String[]{'enablePostForSessions','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableSMSIdentity_type_info = new String[]{'enableSMSIdentity','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableU2F_type_info = new String[]{'enableU2F','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableUpgradeInsecureRequests_type_info = new String[]{'enableUpgradeInsecureRequests','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enableXssProtection_type_info = new String[]{'enableXssProtection','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enforceIpRangesEveryRequest_type_info = new String[]{'enforceIpRangesEveryRequest','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] enforceUserDeviceRevoked_type_info = new String[]{'enforceUserDeviceRevoked','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] forceLogoutOnSessionTimeout_type_info = new String[]{'forceLogoutOnSessionTimeout','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] forceRelogin_type_info = new String[]{'forceRelogin','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] hasRetainedLoginHints_type_info = new String[]{'hasRetainedLoginHints','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] hasUserSwitching_type_info = new String[]{'hasUserSwitching','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] hstsOnForcecomSites_type_info = new String[]{'hstsOnForcecomSites','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] identityConfirmationOnEmailChange_type_info = new String[]{'identityConfirmationOnEmailChange','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] identityConfirmationOnTwoFactorRegistrationEnabled_type_info = new String[]{'identityConfirmationOnTwoFactorRegistrationEnabled','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] lockSessionsToDomain_type_info = new String[]{'lockSessionsToDomain','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] lockSessionsToIp_type_info = new String[]{'lockSessionsToIp','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] lockerServiceAPIVersion_type_info = new String[]{'lockerServiceAPIVersion','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] lockerServiceCSP_type_info = new String[]{'lockerServiceCSP','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] lockerServiceNext_type_info = new String[]{'lockerServiceNext','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] lockerServiceNextControl_type_info = new String[]{'lockerServiceNextControl','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] logoutURL_type_info = new String[]{'logoutURL','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] redirectionWarning_type_info = new String[]{'redirectionWarning','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] referrerPolicy_type_info = new String[]{'referrerPolicy','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] requireHttpOnly_type_info = new String[]{'requireHttpOnly','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] requireHttps_type_info = new String[]{'requireHttps','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] sessionTimeout_type_info = new String[]{'sessionTimeout','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] useLocalStorageForLogoutUrl_type_info = new String[]{'useLocalStorageForLogoutUrl','http://soap.sforce.com/2006/04/metadata',null,'0','1','false'};
    private String[] apex_schema_type_info = new String[]{'http://soap.sforce.com/2006/04/metadata','true','false'};
    private String[] field_order_type_info = new String[]{'allowUserAuthenticationByCertificate','canConfirmEmailChangeInLightningCommunities','canConfirmIdentityBySmsOnly','disableTimeoutWarning','enableBuiltInAuthenticator','enableCSPOnEmail','enableCSRFOnGet','enableCSRFOnPost','enableCacheAndAutocomplete','enableClickjackNonsetupSFDC','enableClickjackNonsetupUser','enableClickjackNonsetupUserHeaderless','enableClickjackSetup','enableContentSniffingProtection','enableLightningLogin','enableLightningLoginOnlyWithUserPerm','enableOauthCorsPolicy','enablePostForSessions','enableSMSIdentity','enableU2F','enableUpgradeInsecureRequests','enableXssProtection','enforceIpRangesEveryRequest','enforceUserDeviceRevoked','forceLogoutOnSessionTimeout','forceRelogin','hasRetainedLoginHints','hasUserSwitching','hstsOnForcecomSites','identityConfirmationOnEmailChange','identityConfirmationOnTwoFactorRegistrationEnabled','lockSessionsToDomain','lockSessionsToIp','lockerServiceAPIVersion','lockerServiceCSP','lockerServiceNext','lockerServiceNextControl','logoutURL','redirectionWarning','referrerPolicy','requireHttpOnly','requireHttps','sessionTimeout','useLocalStorageForLogoutUrl'};
}